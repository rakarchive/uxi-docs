var searchIndex = new Map(JSON.parse('[\
["tetka_games",{"t":"CCHPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPGFGFPPPPPPPPPPPPPPPPPPPPPPPPPGFPPPPPPPPPPFGTTGPFFGGFPPPGFPPPPNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRRKRRKTTTRPFPPTTRIKKTTRGKPRKRKPPGTTMMNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNMMNNNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNM","n":["ataxx","interface","perft","A","A1","A2","A3","A4","A5","A6","A7","B","B1","B2","B3","B4","B5","B6","B7","BadHalfMoveClock","BadLength","BadPiecePlacement","BadSideToMove","BadSquare","BitBoard","Black","Black","Block","Block","C","C1","C2","C3","C4","C5","C6","C7","Color","ColorIter","ColoredPiece","ColoredPieceIter","D","D1","D2","D3","D4","D5","D6","D7","E","E1","E2","E3","E4","E5","E6","E7","F","F1","F2","F3","F4","F5","F6","F7","Fifth","File","FileIter","First","Fourth","G","G1","G2","G3","G4","G5","G6","G7","Move","MoveParseError","NULL","PASS","Piece","Piece","PieceIter","Position","PositionParseError","Rank","RankIter","Second","Seventh","Sixth","Square","SquareIter","Third","TooManyFields","White","White","after_move","at","bitand","bitand_assign","bitboards","bitor","bitor","bitor_assign","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checksum","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","color_bb","colored_piece_bb","count_moves","default","double","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","generate_moves_into","half_move_clock","hash","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_game_over","is_single","iter","iter","iter","iter","iter","iter","len","len","len","len","len","len","new","new_single","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","not","not","nth","nth","nth","nth","nth","nth","piece","piece_bb","ply_count","remove","shl","shl_assign","shr","shr_assign","side_to_move","single","singles","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","source","source","sub","sub","sub","sub_assign","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","winner","Base","BitBoard","BitBoardType","Color","ColoredPiece","ColoredPieceType","EMPTY","FIRST_FILE","FIRST_RANK","File","FileDataIncomplete","Hash","InvalidPieceIdent","JumpTooLong","MAX_IN_GAME","MAX_IN_POSITION","Move","MoveList","MoveStore","MoveType","N","NULL","Piece","PiecePlacementParseError","PositionType","RangeError","Rank","RepresentableType","Square","SquareType","StrError","TooManyRanks","TypeParseError","UNIVERSE","ZERO","after_move","at","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone_into","color","color_bb","colored_piece_bb","contains","contains","count_moves","count_moves","default","east","east","east","east","eq","file","file","file","file","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","generate_moves","generate_moves","generate_moves_into","hash","insert","insert","insert","into","into","into","is_disjoint","is_disjoint","is_empty","is_empty","is_empty","is_empty","is_empty","is_game_over","is_game_over","is_subset","is_subset","is_superset","is_superset","len","len","len","len","lsb","lsb","msb","msb","new","new","new","new","new","new","new","north","north","north","north","not","piece","piece_bb","pop_lsb","pop_lsb","pop_msb","pop_msb","push","push","rank","rank","rank","rank","remove","remove","remove","retain","retain","south","south","south","south","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unsafe_from","west","west","west","west","winner"],"q":[[0,"tetka_games"],[3,"tetka_games::ataxx"],[434,"tetka_games::interface"],[590,"tetka_games::interface::position"],[591,"tetka_games::ataxx::position"],[592,"tetka_games::ataxx::move"],[593,"tetka_games::ataxx::square"],[594,"tetka_games::ataxx::piece"],[595,"core::option"],[596,"tetka_games::ataxx::bitboard"],[597,"core::fmt"],[598,"core::num::error"],[599,"core::result"],[600,"tetka_games::interface::move"],[601,"tetka_games::interface::hash"],[602,"core::error"],[603,"alloc::string"],[604,"core::any"],[605,"tetka_games::interface::bitboard"],[606,"tetka_games::interface::piece"],[607,"tetka_games::interface::square"],[608,"core::ops::function"],[609,"core::marker"],[610,"core::convert"]],"i":[0,0,0,19,7,7,7,7,7,7,7,19,7,7,7,7,7,7,7,28,27,28,28,27,0,13,8,15,8,19,7,7,7,7,7,7,7,0,0,0,0,19,7,7,7,7,7,7,7,19,7,7,7,7,7,7,7,19,7,7,7,7,7,7,7,21,0,0,21,21,19,7,7,7,7,7,7,7,0,0,6,6,0,15,0,0,0,0,0,21,21,21,0,0,21,28,13,8,4,4,10,10,4,10,10,10,10,10,10,6,27,13,14,15,16,8,17,4,28,7,18,19,20,21,22,10,6,27,13,14,15,16,8,17,4,28,7,18,19,20,21,22,4,10,6,13,14,15,16,8,17,4,7,18,19,20,21,22,10,6,13,14,15,16,8,17,4,7,18,19,20,21,22,8,4,4,4,6,10,10,6,13,15,8,7,19,21,10,10,6,6,27,27,13,13,14,15,15,16,8,8,17,4,28,28,7,7,18,19,19,20,21,21,22,10,10,10,6,6,27,27,13,14,15,16,8,17,4,28,28,28,28,7,18,19,20,21,22,10,10,10,10,10,10,10,10,6,13,15,8,4,7,19,21,10,10,10,10,10,10,4,4,4,4,10,6,27,13,14,15,16,8,17,4,28,7,18,19,20,21,22,10,14,16,17,18,20,22,4,6,13,15,8,7,19,21,14,16,17,18,20,22,6,6,10,14,16,17,18,20,22,14,16,17,18,20,22,10,13,14,16,17,18,20,22,8,4,4,4,10,10,10,10,4,10,10,14,16,17,18,20,22,6,27,28,10,10,10,10,6,10,6,13,14,15,16,8,17,4,7,18,19,20,21,22,10,6,27,13,15,8,4,28,7,19,21,10,6,27,13,13,14,15,15,16,8,8,17,4,28,7,7,18,19,19,20,21,21,22,10,6,27,13,14,15,16,8,17,4,28,7,18,19,20,21,22,10,6,27,13,14,15,16,8,17,4,28,7,18,19,20,21,22,4,56,3,0,59,3,0,56,56,56,62,32,0,32,32,69,69,3,0,0,0,66,69,59,0,0,30,62,0,56,0,30,32,0,56,46,3,3,46,30,32,46,30,32,56,56,46,46,59,3,3,56,56,3,3,46,56,56,62,62,46,56,56,62,62,46,46,30,30,32,32,46,30,32,3,3,3,3,3,56,56,46,30,32,56,56,56,56,45,45,63,3,3,56,56,56,56,45,56,56,63,56,56,56,56,56,56,59,59,62,62,46,56,56,62,62,46,59,3,56,56,56,56,45,63,56,56,62,62,3,56,56,56,56,56,56,62,62,46,46,30,32,46,30,32,46,30,32,46,30,32,66,56,56,62,62,3],"f":"``{{cb}df}```````````````````````````````````````````````````````````````````````````````````````````````{{{j{h}}l}h}{{{j{h}}n}{{Ab{A`}}}}{{AdAd}Ad}{{{j{AfAd}}Ad}Ah}`{{Adn}c{}}2121{{{j{c}}}{{j{e}}}{}{}}0000000000000000{{{j{Afc}}}{{j{Afe}}}{}{}}0000000000000000`{{{j{Ad}}}Ad}{{{j{l}}}l}{{{j{Aj}}}Aj}{{{j{Al}}}Al}{{{j{An}}}An}{{{j{B`}}}B`}{{{j{A`}}}A`}{{{j{Bb}}}Bb}{{{j{h}}}h}{{{j{n}}}n}{{{j{Bd}}}Bd}{{{j{Bf}}}Bf}{{{j{Bh}}}Bh}{{{j{Bj}}}Bj}{{{j{Bl}}}Bl}{{{j{c}}{j{Afe}}}Ah{}{}}00000000000000{A`Aj}{{{j{h}}Aj}Ad}{{{j{h}}A`}Ad}{{{j{h}}}Bn}{{}l}{nAd}{{{j{Ad}}{j{Ad}}}C`}{{{j{l}}{j{l}}}C`}{{{j{Aj}}{j{Aj}}}C`}{{{j{An}}{j{An}}}C`}{{{j{A`}}{j{A`}}}C`}{{{j{n}}{j{n}}}C`}{{{j{Bf}}{j{Bf}}}C`}{{{j{Bj}}{j{Bj}}}C`}{{{j{Ad}}{j{AfCb}}}Cd}0{{{j{l}}{j{AfCb}}}Cd}0{{{j{Cf}}{j{AfCb}}}Cd}0{{{j{Aj}}{j{AfCb}}}Cd}0{{{j{Al}}{j{AfCb}}}Cd}{{{j{An}}{j{AfCb}}}Cd}0{{{j{B`}}{j{AfCb}}}Cd}{{{j{A`}}{j{AfCb}}}Cd}0{{{j{Bb}}{j{AfCb}}}Cd}{{{j{h}}{j{AfCb}}}Cd}{{{j{Ch}}{j{AfCb}}}Cd}0{{{j{n}}{j{AfCb}}}Cd}0{{{j{Bd}}{j{AfCb}}}Cd}{{{j{Bf}}{j{AfCb}}}Cd}0{{{j{Bh}}{j{AfCb}}}Cd}{{{j{Bj}}{j{AfCb}}}Cd}0{{{j{Bl}}{j{AfCb}}}Cd}{dAd}{cc{}}{nAd}1{Cjl}2{ClCf}3333333{ClCh}{CnCh}5{D`Ch}666666{Db{{Ab{Ad}}}}{Dd{{Ab{Ad}}}}{Df{{Ab{Ad}}}}{Dh{{Ab{Ad}}}}{Dj{{Ab{Ad}}}}{Dl{{Ab{Ad}}}}{Dn{{Ab{Ad}}}}{E`{{Ab{Ad}}}}{{{j{Eb}}}{{Ed{lc}}}{}}{{{j{Eb}}}{{Ed{Ajc}}}{}}{{{j{Eb}}}{{Ed{Anc}}}{}}{{{j{Eb}}}{{Ed{A`c}}}{}}{{{j{Eb}}}{{Ed{hc}}}{}}{{{j{Eb}}}{{Ed{nc}}}{}}{{{j{Eb}}}{{Ed{Bfc}}}{}}{{{j{Eb}}}{{Ed{Bjc}}}{}}{Ef{{Ab{Ad}}}}{Cj{{Ab{Ad}}}}{Eh{{Ab{Ad}}}}{d{{Ab{Ad}}}}{b{{Ab{Ad}}}}{Bn{{Ab{Ad}}}}{{{j{h}}{j{Afc}}}Ah{{Ej{l}}}}`{{{j{h}}}El}{{{j{Afh}}nA`}Ah}{ce{}{}}00000000000000000000000{{{j{h}}}C`}{lC`}{{}Al}{{}B`}{{}Bb}{{}Bd}{{}Bh}{{}Bl}{{{j{Al}}}Bn}{{{j{B`}}}Bn}{{{j{Bb}}}Bn}{{{j{Bd}}}Bn}{{{j{Bh}}}Bn}{{{j{Bl}}}Bn}{{nn}l}{nl}{{{j{AfAd}}}{{Ab{c}}}{}}{{{j{AfAl}}}{{Ab{c}}}{}}{{{j{AfB`}}}{{Ab{c}}}{}}{{{j{AfBb}}}{{Ab{c}}}{}}{{{j{AfBd}}}{{Ab{c}}}{}}{{{j{AfBh}}}{{Ab{c}}}{}}{{{j{AfBl}}}{{Ab{c}}}{}}543210{Adc{}}{Ajc{}}{{{j{AfAl}}Bn}{{Ab{c}}}{}}{{{j{AfB`}}Bn}{{Ab{c}}}{}}{{{j{AfBb}}Bn}{{Ab{c}}}{}}{{{j{AfBd}}Bn}{{Ab{c}}}{}}{{{j{AfBh}}Bn}{{Ab{c}}}{}}{{{j{AfBl}}Bn}{{Ab{c}}}{}}{A`An}{{{j{h}}An}Ad}`{{{j{Afh}}n}{{Ab{A`}}}}{{Adc}Ad{}}{{{j{AfAd}}c}Ah{}}10`{nAd}{AdAd}{{{j{Al}}}{{En{Bn{Ab{Bn}}}}}}{{{j{B`}}}{{En{Bn{Ab{Bn}}}}}}{{{j{Bb}}}{{En{Bn{Ab{Bn}}}}}}{{{j{Bd}}}{{En{Bn{Ab{Bn}}}}}}{{{j{Bh}}}{{En{Bn{Ab{Bn}}}}}}{{{j{Bl}}}{{En{Bn{Ab{Bn}}}}}}{ln}{{{j{Cf}}}{{Ab{{j{F`}}}}}}{{{j{Ch}}}{{Ab{{j{F`}}}}}}{{AdBn}c{}}{{AdAd}c{}}{{Adn}c{}}{{{j{AfAd}}Ad}Ah}6{{{j{c}}}e{}{}}00000000000000{{{j{c}}}Fb{}}0000000000{c{{Ed{e}}}{}{}}000{b{{Ed{Ajc}}}{}}11{b{{Ed{Anc}}}{}}22{b{{Ed{A`c}}}{}}3333{b{{Ed{nc}}}{}}4{b{{Ed{Bfc}}}{}}55{b{{Ed{Bjc}}}{}}6666666666666666666{{{j{c}}}Fd{}}0000000000000000{{{j{h}}}{{Ab{Aj}}}}```````````````````````````````````{{{j{{f{}{{Ff{c}}{Fh{e}}{Fj{g}}}}}}g}{{f{}{{Ff{c}}{Fh{e}}{Fj{g}}}}}{}{}{}}{{{j{{f{}{{Ff{c}}{Fh{e}}{Fj{g}}}}}}}{{Ab{e}}}{}{}{}}{{{j{c}}}{{j{e}}}{}{}}00{{{j{Afc}}}{{j{Afe}}}{}{}}00{{{j{Af{G`{}{{Fl{c}}{Fn{e}}}}}}}Ah{}{}}0{{{j{El}}}El}{{{j{c}}{j{Afe}}}Ah{}{}}{{{Gf{}{{Gb{c}}{Gd{e}}}}}e{}{}}{{{j{{f{}{{Ff{c}}{Fh{e}}{Fj{g}}}}}}}c{}{}{}}{{{j{{f{}{{Ff{c}}{Fh{e}}{Fj{g}}}}}}e}c{}{}{}}{{{G`{}{{Fl{c}}{Fn{e}}}}e}C`{}{}}0{{{j{{f{}{{Ff{c}}{Fh{e}}{Fj{g}}}}}}}Bn{}{}{}}0{{}El}{{{G`{}{{Fl{c}}{Fn{e}}}}}{{G`{}{{Fl{c}}{Fn{e}}}}}{}{}}0{{{Gl{}{{Gh{c}}{Gj{e}}}}}{{Ab{{Gl{}{{Gh{c}}{Gj{e}}}}}}}{}{}}0{{{j{El}}{j{El}}}C`}{{}{{G`{}{{Fl{c}}{Fn{e}}}}}{}{}}0{{{Gl{}{{Gh{c}}{Gj{e}}}}}c{}{}}0{{{j{El}}{j{AfCb}}}Cd}0{{{j{Cl}}{j{AfCb}}}Cd}0{{{j{D`}}{j{AfCb}}}Cd}0{cc{}}00{{{j{{f{}{{Ff{c}}{Fh{e}}{Fj{g}}}}}}}{{Gn{g}}}{}{}{}}0{{{j{{f{}{{Ff{c}}{Fh{e}}{Fj{g}}}}}}{j{Afi}}}Ah{}{}{}{{Ej{g}}}}{{{j{{f{}{{Ff{c}}{Fh{e}}{Fj{g}}}}}}}El{}{}{}}{{{j{Af{f{}{{Ff{c}}{Fh{e}}{Fj{g}}}}}}e}Ah{}{}{}}{{{j{Af{G`{}{{Fl{c}}{Fn{e}}}}}}e}Ah{}{}}0{ce{}{}}00{{{G`{}{{Fl{c}}{Fn{e}}}}{G`{}{{Fl{c}}{Fn{e}}}}}C`{}{}}0{{{G`{}{{Fl{c}}{Fn{e}}}}}C`{}{}}0{{{j{Ej}}}C`}0{{{j{{Gn{c}}}}}C`{}}{{{j{{f{}{{Ff{c}}{Fh{e}}{Fj{g}}}}}}}C`{}{}{}}04444{{{j{Ej}}}Bn}{{{G`{}{{Fl{c}}{Fn{e}}}}}Bn{}{}}0{{{j{{Gn{c}}}}}Bn{}}{{{G`{}{{Fl{c}}{Fn{e}}}}}{{Ab{e}}}{}{}}000{{}{{G`{}{{Fl{c}}{Fn{e}}}}}{}{}}0{{ce}{{Gf{}{{Gb{c}}{Gd{e}}}}}{}{}}0{{ce}{{Gl{}{{Gh{c}}{Gj{e}}}}}{}{}}0{dEl}{{{G`{}{{Fl{c}}{Fn{e}}}}}{{G`{}{{Fl{c}}{Fn{e}}}}}{}{}}0{{{Gl{}{{Gh{c}}{Gj{e}}}}}{{Ab{{Gl{}{{Gh{c}}{Gj{e}}}}}}}{}{}}0{Elc{}}{{{Gf{}{{Gb{c}}{Gd{e}}}}}c{}{}}{{{j{{f{}{{Ff{c}}{Fh{e}}{Fj{g}}}}}}}c{}{}{}}{{{j{Af{G`{}{{Fl{c}}{Fn{e}}}}}}}{{Ab{e}}}{}{}}000{{{j{AfEj}}c}Ah{}}{{{j{Af{Gn{c}}}}c}Ah{}};;{{{Gl{}{{Gh{c}}{Gj{e}}}}}e{}{}}0{{{j{Af{f{}{{Ff{c}}{Fh{e}}{Fj{g}}}}}}}{{Ab{e}}}{}{}{}}{{{j{Af{G`{}{{Fl{c}}{Fn{e}}}}}}e}Ah{}{}}0{{{j{Af{G`{}{{Fl{c}}{Fn{e}}}}}}g}Ah{}{}{{Hb{e}{{H`{C`}}}}}}0;;::{{{j{c}}}e{}{}}{{{j{c}}}Fb{}}00{c{{Ed{e}}}{}{}}00000{{{j{c}}}Fd{}}00{cHd{Hf{Hh{Bn}}}}{{{G`{}{{Fl{c}}{Fn{e}}}}}{{G`{}{{Fl{c}}{Fn{e}}}}}{}{}}0{{{Gl{}{{Gh{c}}{Gj{e}}}}}{{Ab{{Gl{}{{Gh{c}}{Gj{e}}}}}}}{}{}}0{{{j{{f{}{{Ff{c}}{Fh{e}}{Fj{g}}}}}}}Ab{}{}{}}","D":"AGh","p":[[1,"u8"],[1,"u64"],[10,"PositionType",434,590],[5,"Position",3,591],[1,"reference"],[5,"Move",3,592],[6,"Square",3,593],[6,"ColoredPiece",3,594],[6,"Option",595],[5,"BitBoard",3,596],[0,"mut"],[1,"unit"],[6,"Color",3,594],[5,"ColorIter",3,594],[6,"Piece",3,594],[5,"PieceIter",3,594],[5,"ColoredPieceIter",3,594],[5,"SquareIter",3,593],[6,"File",3,593],[5,"FileIter",3,593],[6,"Rank",3,593],[5,"RankIter",3,593],[1,"usize"],[1,"bool"],[5,"Formatter",597],[8,"Result",597],[6,"MoveParseError",3,592],[6,"PositionParseError",3,591],[1,"u16"],[6,"TypeParseError",434],[5,"ParseIntError",598],[6,"PiecePlacementParseError",434],[1,"f32"],[1,"f64"],[1,"i128"],[1,"i16"],[1,"i32"],[1,"i64"],[1,"i8"],[1,"isize"],[1,"str"],[6,"Result",599],[1,"u128"],[1,"u32"],[10,"MoveStore",434,600],[5,"Hash",434,601],[1,"tuple"],[10,"Error",602],[5,"String",603],[5,"TypeId",604],[17,"BitBoard"],[17,"ColoredPiece"],[17,"Move"],[17,"Base"],[17,"Square"],[10,"BitBoardType",434,605],[17,"Piece"],[17,"Color"],[10,"ColoredPieceType",434,606],[17,"File"],[17,"Rank"],[10,"SquareType",434,607],[8,"MoveList",434,600],[17,"Output"],[10,"FnMut",608],[10,"RepresentableType",434],[10,"Copy",609],[10,"Into",610],[10,"MoveType",434]],"r":[[24,596],[37,594],[38,594],[39,594],[40,594],[66,593],[67,593],[78,592],[79,592],[82,594],[84,594],[85,591],[86,591],[87,593],[88,593],[92,593],[93,593],[436,605],[439,606],[445,601],[451,600],[452,600],[453,600],[458,590],[463,607]],"b":[[103,"impl-BitOr%3CSquare%3E-for-BitBoard"],[104,"impl-BitOr-for-BitBoard"],[187,"impl-Debug-for-BitBoard"],[188,"impl-Display-for-BitBoard"],[189,"impl-Display-for-Move"],[190,"impl-Debug-for-Move"],[191,"impl-Debug-for-MoveParseError"],[192,"impl-Display-for-MoveParseError"],[193,"impl-Display-for-Color"],[194,"impl-Debug-for-Color"],[196,"impl-Debug-for-Piece"],[197,"impl-Display-for-Piece"],[199,"impl-Debug-for-ColoredPiece"],[200,"impl-Display-for-ColoredPiece"],[203,"impl-Debug-for-PositionParseError"],[204,"impl-Display-for-PositionParseError"],[205,"impl-Debug-for-Square"],[206,"impl-Display-for-Square"],[208,"impl-Display-for-File"],[209,"impl-Debug-for-File"],[211,"impl-Display-for-Rank"],[212,"impl-Debug-for-Rank"],[214,"impl-From%3Cu64%3E-for-BitBoard"],[216,"impl-From%3CSquare%3E-for-BitBoard"],[228,"impl-From%3CTypeParseError%3E-for-PositionParseError"],[229,"impl-From%3CParseIntError%3E-for-PositionParseError"],[231,"impl-From%3CPiecePlacementParseError%3E-for-PositionParseError"],[345,"impl-Sub%3Cusize%3E-for-BitBoard"],[346,"impl-Sub-for-BitBoard"],[347,"impl-Sub%3CSquare%3E-for-BitBoard"],[498,"impl-Display-for-Hash"],[499,"impl-Debug-for-Hash"],[500,"impl-Debug-for-TypeParseError"],[501,"impl-Display-for-TypeParseError"],[502,"impl-Display-for-PiecePlacementParseError"],[503,"impl-Debug-for-PiecePlacementParseError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJIBMAAAAAIABAAhACoAGABFAAkAUAAAAFQAAABaAAIAXwADAGUAAQBpACUAkAAgALIAAAC0AAkAwAAXANkAAADbAAAA3QAAAOUAAQDoAAAA7wAHAPgADAAHAQAAGgEGACMBCwAyAQsAQAENAFABBgBYAQIAXQEAAF8BUgCzAQAAugEDAL8BAQDMAQEAzwEAANEBAgDYAQUA4AEBAOMBAQDpAQAA7gEAAPUBAwD/AQAADAIAABYCAAAoAgAALgIAADwCDAA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
